name: Main
on:
  push:
    branches: [main]

jobs:
  # Build and test DSL component
  build-dsl:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./DSL
    strategy:
      matrix:
        java-version: [11]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up JDK ${{ matrix.java-version }}
        uses: actions/setup-java@v2.5.0
        with:
          distribution: adopt
          java-version: ${{ matrix.java-version }}
          cache: gradle

      # See https://docs.github.com/en/actions/guides/building-and-testing-java-with-gradle
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: Test with Gradle
        run: ./gradlew check

      - name: Upload test report
        if: ${{ failure() }}
        uses: actions/upload-artifact@v2
        with:
          name: Test report
          # upload-artifact does not use working-directory
          path: DSL/de.unibonn.simpleml/build/reports/tests/test/

  # Build and test Frontend component
  build-frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./Frontend
    strategy:
      matrix:
        node-version: [16]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node ${{ matrix.python-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: npm
          cache-dependency-path: Frontend/package-lock.json

      - name: Install dependencies
        run: npm ci --prefer-offline --no-audit

    # TODO: activate once there are unit tests
    #   - name: Test
    #     run: npm run test

      # TODO: Treat warnings as errors by removing CI=false
      - name: Build
        run: CI=false npm run build

  # Build and test Runtime component
  build-runtime:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./Runtime

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Cache conda
        uses: actions/cache@v2
        env:
          # Increase this value to reset cache if environment.yml has not changed
          CACHE_NUMBER: 0
        with:
          path: ~/conda_pkgs_dir
          key:
            ${{ runner.os }}-conda-${{ env.CACHE_NUMBER }}-${{
            hashFiles('environment.yml') }}

      - uses: conda-incubator/setup-miniconda@v2.1.1
        with:
          activate-environment: runtime
          environment-file: Runtime/environment.yml
          python-version: 3.9
          use-only-tar-bz2: true

      - name: Test with pytest
        run: conda run -n runtime pytest --cov=simpleml --cov-report=html

      - name: Upload test coverage
        if: ${{ github.actor != 'dependabot[bot]' }}
        uses: actions/upload-artifact@v2
        with:
          name: Test coverage
          path: Runtime/htmlcov

  # Test interaction of Docker containers (TODO: activate again once repo is public)
  #   docker-smoke-test:
  #     runs-on: ubuntu-latest

  #     steps:
  #       - name: Checkout repository
  #         uses: actions/checkout@v2

  #       - name: Build the stack
  #         run: docker-compose up -d

  #       - name: Test
  #         run: docker run --network container:simple-ml_frontend appropriate/curl -s --retry 10 --retry-connrefused http://localhost:4200/
