package test.overriddenFunctionMustBeOpen

open class MyOpenClass {
    open fun openFunction()
    fun closedFunction()
    static fun staticFunction()
}

interface MyInterface {
    open fun explicitlyOpenFunction()
    fun implicitlyOpenFunction()
}

class MyClass sub MyOpenClass, MyInterface {
    // no_semantic_error "The overridden function must be open."
    fun »ownFunction«()
    // no_semantic_error "The overridden function must be open."
    override fun »ownFunction2«()

    // no_semantic_error "The overridden function must be open."
    override fun »openFunction«()
    // semantic_error "The overridden function must be open."
    override fun »closedFunction«()
    // no_semantic_error "The overridden function must be open."
    override fun »staticFunction«()

    // no_semantic_error "The overridden function must be open."
    override fun »explicitlyOpenFunction«()
    // no_semantic_error "The overridden function must be open."
    override fun »implicitlyOpenFunction«()
}