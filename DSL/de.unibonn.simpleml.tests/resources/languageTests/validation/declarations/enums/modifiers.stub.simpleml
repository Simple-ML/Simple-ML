package tests.modifiers

// semantic_error "A top-level enum must not have this modifier."
// semantic_error "A top-level enum must not have this modifier."
// semantic_error "A top-level enum must not have this modifier."
// semantic_error "A top-level enum must not have this modifier."
»open« »override« »pure« »static« enum MyEnum1

// no_semantic_error "A top-level enum must not have this modifier."
»deprecated« enum MyEnum2

class MyClass {
    // semantic_error "A nested enum must not have this modifier."
    // semantic_error "A nested enum must not have this modifier."
    // semantic_error "A nested enum must not have this modifier."
    »open« »override« »pure« enum MyEnum1

    // no_semantic_error "A nested enum must not have this modifier."
    // no_semantic_error "A nested enum must not have this modifier."
    »deprecated« »static« enum MyEnum2

    // semantic_info "A nested enum is always static."
    »static« enum MyEnum3
}


/* An interface must not have nested enums and if they do we already display a different error. */

interface MyInterface {

    // no_semantic_error "A nested enum must not have this modifier."
    // no_semantic_error "A nested enum must not have this modifier."
    // no_semantic_error "A nested enum must not have this modifier."
    // no_semantic_error "A nested enum must not have this modifier."
    // no_semantic_error "A nested enum must not have this modifier."
    »deprecated« »open« »override« »pure« »static« enum MyEnum
}