package tests.mustHaveType

// semantic_error "A parameter must have a type."
// no_semantic_error "A parameter must have a type."
annotation MyAnnotation(»a«, »b«: Int)

// semantic_error "A parameter must have a type."
// no_semantic_error "A parameter must have a type."
class MyClass constructor(»a«, »b«: Int) {
    // semantic_error "A parameter must have a type."
    // no_semantic_error "A parameter must have a type."
    class MyClass constructor(»a«, »b«: Int) {}

    // semantic_error "A parameter must have a type."
    // no_semantic_error "A parameter must have a type."
    fun myFunction(»a«, »b«: Int)
}

// semantic_error "A parameter must have a type."
// no_semantic_error "A parameter must have a type."
fun myFunction(»a«, »b«: Int)

workflow myWorkflow {
    // semantic_error "A parameter must have a type."
    // no_semantic_error "A parameter must have a type."
    lambda (»a«, »b«: Int);
}

// semantic_error "A parameter must have a type."
// no_semantic_error "A parameter must have a type."
step myStep(
    f: callable (»a«, »b«: Int) -> ()
) {}