fun f() -> (a: Int, b: Int)

class MyClass {
    fun f() -> (a: Int, b: Int)
}

step myFunction() -> a: Int {
    // semantic_warning "The left-hand side of this assignment can be removed."
    »(_, _) = f();«
    // semantic_warning "The left-hand side of this assignment can be removed."
    »(_, _) = MyClass().f();«

    // no_semantic_warning "The left-hand side of this assignment can be removed."
    »val a = 1;«
    // no_semantic_warning "The left-hand side of this assignment can be removed."
    »yield a = 1;«

    lambda () {
        // semantic_warning "The left-hand side of this assignment can be removed."
        »(_, _) = f();«
        // semantic_warning "The left-hand side of this assignment can be removed."
        »(_, _) = MyClass().f();«

        // no_semantic_warning "The left-hand side of this assignment can be removed."
        »val a = 1;«
        // no_semantic_warning "The left-hand side of this assignment can be removed."
        »yield a = 1;«
    };
}