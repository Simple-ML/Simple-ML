fun impureFunction()
pure fun pureFunction()

class MyClass {
    fun impureFunction()
    pure fun pureFunction()
}

step myFunction() -> a: Int {
    // semantic_warning "This statement does nothing."
    »1 + 2;«
    // semantic_warning "This statement does nothing."
    »pureFunction();«
    // semantic_warning "This statement does nothing."
    »MyClass().pureFunction();«

    // no_semantic_warning "This statement does nothing."
    »impureFunction();«
    // no_semantic_warning "This statement does nothing."
    »MyClass().impureFunction();«

    lambda () {
        // semantic_warning "This statement does nothing."
        »1 + 2;«
        // semantic_warning "This statement does nothing."
        »pureFunction();«
        // semantic_warning "This statement does nothing."
        »MyClass().pureFunction();«

        // no_semantic_warning "This statement does nothing."
        »impureFunction();«
        // no_semantic_warning "This statement does nothing."
        »MyClass().impureFunction();«
    };
}