package tests.mustNotDeprecateRequiredParameter

// semantic_error "A required parameter cannot be deprecated."
// no_semantic_error "A required parameter cannot be deprecated."
annotation MyAnnotation(»deprecated« a: Int, »deprecated« b: Int or 3)

// semantic_error "A required parameter cannot be deprecated."
// no_semantic_error "A required parameter cannot be deprecated."
class MyClass(»deprecated« a: Int, »deprecated« b: Int or 3) {

    // semantic_error "A required parameter cannot be deprecated."
    // no_semantic_error "A required parameter cannot be deprecated."
    class MyClass(»deprecated« a: Int, »deprecated« b: Int or 3)

    // semantic_error "A required parameter cannot be deprecated."
    // no_semantic_error "A required parameter cannot be deprecated."
    fun myFunction(»deprecated« a: Int, »deprecated« b: Int or 3)
}

// semantic_error "A required parameter cannot be deprecated."
// no_semantic_error "A required parameter cannot be deprecated."
fun myFunction(»deprecated« a: Int, »deprecated« b: Int or 3)

// semantic_error "A required parameter cannot be deprecated."
// no_semantic_error "A required parameter cannot be deprecated."
step myStep1(»deprecated« a: Int, »deprecated« b: Int or 3) {}

// semantic_error "A required parameter cannot be deprecated."
// no_semantic_error "A required parameter cannot be deprecated."
step myStep2(
    f: callable (»deprecated« a: Int, »deprecated« b: Int or 3) -> ()
) {}
