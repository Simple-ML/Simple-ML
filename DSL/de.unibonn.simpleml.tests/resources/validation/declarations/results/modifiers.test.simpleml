package tests.validation.declarations.results.modifiers

class MyClass {

    // semantic_error "A result must not have this modifier."
    // semantic_error "A result must not have this modifier."
    // semantic_error "A result must not have this modifier."
    fun myFunction1() -> (»open« »override« »static« a: Int)

    // no_semantic_error "A result must not have this modifier."
    fun myFunction2() -> (»deprecated« a: Int)
}

// semantic_error "A result must not have this modifier."
// semantic_error "A result must not have this modifier."
// semantic_error "A result must not have this modifier."
fun myFunction1() -> (»open« »override« »static« a: Int)

// no_semantic_error "A result must not have this modifier."
fun myFunction2() -> (»deprecated« a: Int)

// semantic_error "A result must not have this modifier."
// semantic_error "A result must not have this modifier."
// semantic_error "A result must not have this modifier."
step myStep1(
    f: callable () -> (»open« »override« »static« a: Int)
) {}

// no_semantic_error "A result must not have this modifier."
step myStep2(
    f: callable () -> (»deprecated« a: Int)
) {}
