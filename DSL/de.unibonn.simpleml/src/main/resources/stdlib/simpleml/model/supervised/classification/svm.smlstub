package simpleml.model.supervised.classification

import simpleml.model.*
import simpleml.dataset.Dataset

@Description("Functionalities to train an SVM classification model.")
class SupportVectorMachineClassifier(
    penalty: String = "l2",
    loss: String = "squared_hinge",
    dual: Boolean = true,
    tol: Float = 1e-4,
    c: Float = 1.0,
    multiClass: String = "ovr"
) sub Estimator {
    attr penalty: String
    attr loss: String
    attr dual: Boolean
    attr tol: Float
    attr c: Float
    attr multiClass: String

    @Description("Train the model given a dataset of features and a dataset of labels")
    fun fit(features: Dataset, target: Dataset) -> trainedModel: SupportVectorMachineClassifierModel
}

class SupportVectorMachineClassifierModel() sub Model {
    @Description("Predict values given a dataset of features")
    fun predict(@Description("A dataset consisting of features for prediction.") features: Dataset) -> @Description("A dataset consisting of the predicted values.") results: Dataset
}
