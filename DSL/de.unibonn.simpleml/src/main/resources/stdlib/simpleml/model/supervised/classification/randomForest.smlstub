package simpleml.model.supervised.classification

import simpleml.model.*
import simpleml.dataset.Dataset

@Description("Functionalities to train a random forest classification model.")
class RandomForestClassifier(
    nEstimator: Int = 100,
    criterion: String = "gini",
    maxDepth: Int? = null,
    randomState: Int? = null
) sub Estimator {
    attr nEstimator: Int
    attr criterion: String
    attr maxDepth: Int?
    attr randomState: Int?

    @Description("Train the model given a dataset of features and a dataset of labels")
    fun fit(features: Dataset, target: Dataset) -> trainedModel: RandomForestClassifierModel
}

@Description("A trained random forest classification model.")
class RandomForestClassifierModel() sub Model {
    @Description("Predict values given a dataset of features")
    fun predict(@Description("A dataset consisting of features for prediction.") features: Dataset) -> @Description("A dataset consisting of the predicted values.") results: Dataset
}
