package tests.validation.other.argumentLists.uniqueParameters

annotation A(a: Int, b: Int or 0)

@A(
    // semantic_error "The parameter 'a' is already set."
    »1«,
    // semantic_error "The parameter 'a' is already set."
    »a = 1«
)
@A(
    // semantic_error "The parameter 'b' is already set."
    »b = 1«,
    // semantic_error "The parameter 'b' is already set."
    »b = 1«
)
class C(a: Int, b: Int or 0)

enum E {
    V(a: Int, b: Int or 0)
}

@A(
    // no_semantic_error "The parameter 'a' is already set."
    »a = 1«,
    // no_semantic_error "The parameter 'b' is already set."
    »b = 1«
)
fun f(a: Int, b: Int or 0)

step g(f: callable (a: Int, b: Int or 0) -> ()) {
    f(
        // semantic_error "The parameter 'a' is already set."
        »1«,
        // semantic_error "The parameter 'a' is already set."
        »a = 1«
    );
    f(
        // semantic_error "The parameter 'b' is already set."
        »b = 1«,
        // semantic_error "The parameter 'b' is already set."
        »b = 1«
    );
    f(
        // no_semantic_error "The parameter 'a' is already set."
        »a = 1«,
        // no_semantic_error "The parameter 'b' is already set."
        »b = 1«
    );
}

workflow test {
    C(
        // semantic_error "The parameter 'a' is already set."
        »1«,
        // semantic_error "The parameter 'a' is already set."
        »a = 1«
    );
    C(
        // semantic_error "The parameter 'b' is already set."
        »b = 1«,
        // semantic_error "The parameter 'b' is already set."
        »b = 1«
    );
    C(
        // no_semantic_error "The parameter 'a' is already set."
        »a = 1«,
        // no_semantic_error "The parameter 'b' is already set."
        »b = 1«
    );

    E.V(
        // semantic_error "The parameter 'a' is already set."
        »1«,
        // semantic_error "The parameter 'a' is already set."
        »a = 1«
    );
    E.V(
        // semantic_error "The parameter 'b' is already set."
        »b = 1«,
        // semantic_error "The parameter 'b' is already set."
        »b = 1«
    );
    E.V(
        // no_semantic_error "The parameter 'a' is already set."
        »a = 1«,
        // no_semantic_error "The parameter 'b' is already set."
        »b = 1«
    );


    f(
        // semantic_error "The parameter 'a' is already set."
        »1«,
        // semantic_error "The parameter 'a' is already set."
        »a = 1«
    );
    f(
        // semantic_error "The parameter 'b' is already set."
        »b = 1«,
        // semantic_error "The parameter 'b' is already set."
        »b = 1«
    );
    f(
        // no_semantic_error "The parameter 'a' is already set."
        »a = 1«,
        // no_semantic_error "The parameter 'b' is already set."
        »b = 1«
    );

    lambda (a: Int, b: Int) {}(
        // semantic_error "The parameter 'a' is already set."
        »1«,
        // semantic_error "The parameter 'a' is already set."
        »a = 1«
    );
    lambda (a: Int, b: Int) {}(
        // semantic_error "The parameter 'b' is already set."
        »b = 1«,
        // semantic_error "The parameter 'b' is already set."
        »b = 1«
    );
    lambda (a: Int, b: Int) {}(
        // no_semantic_error "The parameter 'a' is already set."
        »a = 1«,
        // no_semantic_error "The parameter 'b' is already set."
        »b = 1«
    );
}
